{
  "address": "0xA69dCDd681c1d0Cd74687505328681ec8939d8b9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe334b22243df8f014390a028f09808ccc67b22bb4774f0e44367da33c9c6cedb",
  "receipt": {
    "to": null,
    "from": "0xF5794F069914B17A00E255EC5E29084394349E82",
    "contractAddress": "0xA69dCDd681c1d0Cd74687505328681ec8939d8b9",
    "transactionIndex": 147,
    "gasUsed": "980915",
    "logsBloom": "0x
    "blockHash": "0x9faf7c35648144c818f0b313f3be2397fa31b35ebfaf2421d2a63584f33fbc76",
    "transactionHash": "0xe334b22243df8f014390a028f09808ccc67b22bb4774f0e44367da33c9c6cedb",
    "logs": [],
    "blockNumber": 7853899,
    "cumulativeGasUsed": "24195277",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "f2afb38f33fad3f5f64a1121130549d9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"\\n\\n//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n\\n    using PriceConverter for uint256;\\n\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    //Use constant, immutable to lower the gas\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address priceFeedAddress){\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable{\\n\\n        // require(getConversionRate(msg.value) >= MINIMUM_USD, \\\"Didn't send enough!!\\\");\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"Didn't send enough!!\\\");\\n        //18 decimals\\n        s_funders.push(msg.sender); //To store all sender list\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public {\\n\\n        // require(msg.sender == i_owner, \\\"Sender is not i_owner\\\")\\n\\n        for(uint256 funderIndex = 0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        //reset the array\\n        s_funders = new address[](0);\\n\\n        //msg.sender = address\\n        //payable(msg.sender) = payable address\\n\\n        //transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        //send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //require(sendSuccess, \\\"Send Failed\\\")\\n\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner{\\n\\n        address[] memory funders = s_funders;\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address){\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns (uint256){\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == i_owner, \\\"Sender is not i_owner\\\");\\n        if(msg.sender != i_owner) { revert NotOwner(); }\\n        _; // doing the rest of the code\\n    }\\n\\n    // function withdraw(){}\\n}\",\"keccak256\":\"0xcab9587ad607b7d19083327910e91b25d93a48bd5e0a42fda5d8a10da3ea4a3d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter{\\n\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n\\n        //ABI\\n        //Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e -- ETH/USD \\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        // (/*uint80 roundID*/, int price, /*uint startedAt*/, /*uint timeStamp*/, /*uint80 answeredInRound*/) = priceFeed.latestRoundData();\\n        (, int256 price,,,) = priceFeed.latestRoundData();\\n        //ETH in terms of USD\\n        //3000.00000000\\n\\n        return uint256(price * 1e10); // 1**10 = 10000000000\\n    }\\n\\n    function getVersion() internal view returns (uint256){\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x331cfb6bca2e3d22f4d06d934162d9521cf028c47c52c82255c455fd57697e63\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011dd380380620011dd833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61105e6200017f600039600081816103ba015281816105320152610728015261105e6000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906109ec565b6101a6565b6040516100b49190610a32565b60405180910390f35b3480156100c957600080fd5b506100d26101ee565b005b3480156100e057600080fd5b506100e96103a9565b6040516100f69190610a32565b60405180910390f35b34801561010b57600080fd5b506101146103b6565b6040516101219190610a5c565b60405180910390f35b34801561013657600080fd5b5061013f6103de565b60405161014c9190610ad6565b60405180910390f35b61015d610408565b005b610167610530565b005b34801561017557600080fd5b50610190600480360381019061018b9190610b1d565b6107be565b60405161019d9190610a5c565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60005b6001805490508110156102995760006001828154811061021457610213610b4a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061029190610ba8565b9150506101f1565b50600067ffffffffffffffff8111156102b5576102b4610bf1565b5b6040519080825280602002602001820160405280156102e35781602001602082028036833780820191505090505b50600190805190602001906102f99291906108e2565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161032090610c51565b60006040518083038185875af1925050503d806000811461035d576040519150601f19603f3d011682016040523d82523d6000602084013e610362565b606091505b50509050806103a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039d90610cc3565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610447600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461080690919063ffffffff16565b1015610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047f90610d2f565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105b5576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561063957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105ef575b5050505050905060005b81518110156106c357600082828151811061066157610660610b4a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106bb90610ba8565b915050610643565b50600067ffffffffffffffff8111156106df576106de610bf1565b5b60405190808252806020026020018201604052801561070d5781602001602082028036833780820191505090505b50600190805190602001906107239291906108e2565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161076a90610c51565b60006040518083038185875af1925050503d80600081146107a7576040519150601f19603f3d011682016040523d82523d6000602084013e6107ac565b606091505b50509050806107ba57600080fd5b5050565b6000600182815481106107d4576107d3610b4a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061081283610842565b90506000670de0b6b3a7640000858361082b9190610d4f565b6108359190610dd8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561088b57600080fd5b505afa15801561089f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c39190610e96565b5050509150506402540be400816108da9190610f11565b915050919050565b82805482825590600052602060002090810192821561095b579160200282015b8281111561095a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610902565b5b509050610968919061096c565b5090565b5b8082111561098557600081600090555060010161096d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109b98261098e565b9050919050565b6109c9816109ae565b81146109d457600080fd5b50565b6000813590506109e6816109c0565b92915050565b600060208284031215610a0257610a01610989565b5b6000610a10848285016109d7565b91505092915050565b6000819050919050565b610a2c81610a19565b82525050565b6000602082019050610a476000830184610a23565b92915050565b610a56816109ae565b82525050565b6000602082019050610a716000830184610a4d565b92915050565b6000819050919050565b6000610a9c610a97610a928461098e565b610a77565b61098e565b9050919050565b6000610aae82610a81565b9050919050565b6000610ac082610aa3565b9050919050565b610ad081610ab5565b82525050565b6000602082019050610aeb6000830184610ac7565b92915050565b610afa81610a19565b8114610b0557600080fd5b50565b600081359050610b1781610af1565b92915050565b600060208284031215610b3357610b32610989565b5b6000610b4184828501610b08565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bb382610a19565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610be657610be5610b79565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c3b600083610c20565b9150610c4682610c2b565b600082019050919050565b6000610c5c82610c2e565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610cad600b83610c66565b9150610cb882610c77565b602082019050919050565b60006020820190508181036000830152610cdc81610ca0565b9050919050565b7f4469646e27742073656e6420656e6f7567682121000000000000000000000000600082015250565b6000610d19601483610c66565b9150610d2482610ce3565b602082019050919050565b60006020820190508181036000830152610d4881610d0c565b9050919050565b6000610d5a82610a19565b9150610d6583610a19565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d9e57610d9d610b79565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610de382610a19565b9150610dee83610a19565b925082610dfe57610dfd610da9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e2881610e09565b8114610e3357600080fd5b50565b600081519050610e4581610e1f565b92915050565b6000819050919050565b610e5e81610e4b565b8114610e6957600080fd5b50565b600081519050610e7b81610e55565b92915050565b600081519050610e9081610af1565b92915050565b600080600080600060a08688031215610eb257610eb1610989565b5b6000610ec088828901610e36565b9550506020610ed188828901610e6c565b9450506040610ee288828901610e81565b9350506060610ef388828901610e81565b9250506080610f0488828901610e36565b9150509295509295909350565b6000610f1c82610e4b565b9150610f2783610e4b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f6657610f65610b79565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fa357610fa2610b79565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fe057610fdf610b79565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561101d5761101c610b79565b5b82820290509291505056fea2646970667358221220bd15ded901bed20d079ec8a5cd1a082439cd79721e38eb13abacc55951ee6e2064736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906109ec565b6101a6565b6040516100b49190610a32565b60405180910390f35b3480156100c957600080fd5b506100d26101ee565b005b3480156100e057600080fd5b506100e96103a9565b6040516100f69190610a32565b60405180910390f35b34801561010b57600080fd5b506101146103b6565b6040516101219190610a5c565b60405180910390f35b34801561013657600080fd5b5061013f6103de565b60405161014c9190610ad6565b60405180910390f35b61015d610408565b005b610167610530565b005b34801561017557600080fd5b50610190600480360381019061018b9190610b1d565b6107be565b60405161019d9190610a5c565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60005b6001805490508110156102995760006001828154811061021457610213610b4a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061029190610ba8565b9150506101f1565b50600067ffffffffffffffff8111156102b5576102b4610bf1565b5b6040519080825280602002602001820160405280156102e35781602001602082028036833780820191505090505b50600190805190602001906102f99291906108e2565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161032090610c51565b60006040518083038185875af1925050503d806000811461035d576040519150601f19603f3d011682016040523d82523d6000602084013e610362565b606091505b50509050806103a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039d90610cc3565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610447600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461080690919063ffffffff16565b1015610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047f90610d2f565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105b5576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561063957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105ef575b5050505050905060005b81518110156106c357600082828151811061066157610660610b4a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106bb90610ba8565b915050610643565b50600067ffffffffffffffff8111156106df576106de610bf1565b5b60405190808252806020026020018201604052801561070d5781602001602082028036833780820191505090505b50600190805190602001906107239291906108e2565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161076a90610c51565b60006040518083038185875af1925050503d80600081146107a7576040519150601f19603f3d011682016040523d82523d6000602084013e6107ac565b606091505b50509050806107ba57600080fd5b5050565b6000600182815481106107d4576107d3610b4a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061081283610842565b90506000670de0b6b3a7640000858361082b9190610d4f565b6108359190610dd8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561088b57600080fd5b505afa15801561089f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c39190610e96565b5050509150506402540be400816108da9190610f11565b915050919050565b82805482825590600052602060002090810192821561095b579160200282015b8281111561095a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610902565b5b509050610968919061096c565b5090565b5b8082111561098557600081600090555060010161096d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109b98261098e565b9050919050565b6109c9816109ae565b81146109d457600080fd5b50565b6000813590506109e6816109c0565b92915050565b600060208284031215610a0257610a01610989565b5b6000610a10848285016109d7565b91505092915050565b6000819050919050565b610a2c81610a19565b82525050565b6000602082019050610a476000830184610a23565b92915050565b610a56816109ae565b82525050565b6000602082019050610a716000830184610a4d565b92915050565b6000819050919050565b6000610a9c610a97610a928461098e565b610a77565b61098e565b9050919050565b6000610aae82610a81565b9050919050565b6000610ac082610aa3565b9050919050565b610ad081610ab5565b82525050565b6000602082019050610aeb6000830184610ac7565b92915050565b610afa81610a19565b8114610b0557600080fd5b50565b600081359050610b1781610af1565b92915050565b600060208284031215610b3357610b32610989565b5b6000610b4184828501610b08565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bb382610a19565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610be657610be5610b79565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c3b600083610c20565b9150610c4682610c2b565b600082019050919050565b6000610c5c82610c2e565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610cad600b83610c66565b9150610cb882610c77565b602082019050919050565b60006020820190508181036000830152610cdc81610ca0565b9050919050565b7f4469646e27742073656e6420656e6f7567682121000000000000000000000000600082015250565b6000610d19601483610c66565b9150610d2482610ce3565b602082019050919050565b60006020820190508181036000830152610d4881610d0c565b9050919050565b6000610d5a82610a19565b9150610d6583610a19565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d9e57610d9d610b79565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610de382610a19565b9150610dee83610a19565b925082610dfe57610dfd610da9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e2881610e09565b8114610e3357600080fd5b50565b600081519050610e4581610e1f565b92915050565b6000819050919050565b610e5e81610e4b565b8114610e6957600080fd5b50565b600081519050610e7b81610e55565b92915050565b600081519050610e9081610af1565b92915050565b600080600080600060a08688031215610eb257610eb1610989565b5b6000610ec088828901610e36565b9550506020610ed188828901610e6c565b9450506040610ee288828901610e81565b9350506060610ef388828901610e81565b9250506080610f0488828901610e36565b9150509295509295909350565b6000610f1c82610e4b565b9150610f2783610e4b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f6657610f65610b79565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fa357610fa2610b79565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fe057610fdf610b79565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561101d5761101c610b79565b5b82820290509291505056fea2646970667358221220bd15ded901bed20d079ec8a5cd1a082439cd79721e38eb13abacc55951ee6e2064736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}