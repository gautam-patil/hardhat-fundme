{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5f37f857cde36cd0b5483db56993367141b773b543301d8294a669b67ad9da26",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "822036",
    "logsBloom": "0x
    "blockHash": "0x692e248474e9cef3771a3aae312e7093f6a5d5998ef354b36f32666c05df1cb0",
    "transactionHash": "0x5f37f857cde36cd0b5483db56993367141b773b543301d8294a669b67ad9da26",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "822036",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "08c286b84fa7e51d72d7723b9d415105",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"\\n\\n//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n\\n    using PriceConverter for uint256;\\n\\n    //Use constant, immutable to lower the gas\\n    uint256 public constant minimumUsd = 50 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress){\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable{\\n\\n        // require(getConversionRate(msg.value) >= minimumUsd, \\\"Didn't send enough!!\\\");\\n        require(msg.value.getConversionRate(priceFeed) >= minimumUsd, \\\"Didn't send enough!!\\\");\\n        //18 decimals\\n        funders.push(msg.sender); //To store all sender list\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public {\\n\\n        // require(msg.sender == owner, \\\"Sender is not owner\\\")\\n\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        //reset the array\\n        funders = new address[](0);\\n\\n        //msg.sender = address\\n        //payable(msg.sender) = payable address\\n\\n        //transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        //send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //require(sendSuccess, \\\"Send Failed\\\")\\n\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner, \\\"Sender is not owner\\\");\\n        if(msg.sender != owner) { revert NotOwner(); }\\n        _; // doing the rest of the code\\n    }\\n\\n    // function withdraw(){}\\n}\",\"keccak256\":\"0x31fdc7003aecb9d073343fe0be9bd33499be68a27912f6713254b8a761ca452d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter{\\n\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n\\n        //ABI\\n        //Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e -- ETH/USD \\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        // (/*uint80 roundID*/, int price, /*uint startedAt*/, /*uint timeStamp*/, /*uint80 answeredInRound*/) = priceFeed.latestRoundData();\\n        (, int256 price,,,) = priceFeed.latestRoundData();\\n        //ETH in terms of USD\\n        //3000.00000000\\n\\n        return uint256(price * 1e10); // 1**10 = 10000000000\\n    }\\n\\n    function getVersion() internal view returns (uint256){\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x331cfb6bca2e3d22f4d06d934162d9521cf028c47c52c82255c455fd57697e63\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610ed9380380610ed983398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610d7b61015e60003960006103990152610d7b6000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b60d42881461014a578063dc0d3dff1461015457610070565b8063098de820146100755780633ccfd60b146100a05780633e47d6f3146100b7575b600080fd5b34801561008157600080fd5b5061008a610191565b60405161009791906106bf565b60405180910390f35b3480156100ac57600080fd5b506100b561019e565b005b3480156100c357600080fd5b506100de60048036038101906100d9919061073d565b610359565b6040516100eb91906106bf565b60405180910390f35b34801561010057600080fd5b50610109610371565b60405161011691906107c9565b60405180910390f35b34801561012b57600080fd5b50610134610397565b60405161014191906107f3565b60405180910390f35b6101526103bb565b005b34801561016057600080fd5b5061017b6004803603810190610176919061083a565b6104e4565b60405161018891906107f3565b60405180910390f35b6802b5e3af16b188000081565b60005b6000805490508110156102495760008082815481106101c3576101c2610867565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610241906108c5565b9150506101a1565b50600067ffffffffffffffff8111156102655761026461090e565b5b6040519080825280602002602001820160405280156102935781602001602082028036833780820191505090505b50600090805190602001906102a99291906105ff565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516102d09061096e565b60006040518083038185875af1925050503d806000811461030d576040519150601f19603f3d011682016040523d82523d6000602084013e610312565b606091505b5050905080610356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034d906109e0565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6802b5e3af16b18800006103fa600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461052390919063ffffffff16565b101561043b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043290610a4c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600081815481106104f457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061052f8361055f565b90506000670de0b6b3a764000085836105489190610a6c565b6105529190610af5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105a857600080fd5b505afa1580156105bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e09190610bb3565b5050509150506402540be400816105f79190610c2e565b915050919050565b828054828255906000526020600020908101928215610678579160200282015b828111156106775782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061061f565b5b5090506106859190610689565b5090565b5b808211156106a257600081600090555060010161068a565b5090565b6000819050919050565b6106b9816106a6565b82525050565b60006020820190506106d460008301846106b0565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061070a826106df565b9050919050565b61071a816106ff565b811461072557600080fd5b50565b60008135905061073781610711565b92915050565b600060208284031215610753576107526106da565b5b600061076184828501610728565b91505092915050565b6000819050919050565b600061078f61078a610785846106df565b61076a565b6106df565b9050919050565b60006107a182610774565b9050919050565b60006107b382610796565b9050919050565b6107c3816107a8565b82525050565b60006020820190506107de60008301846107ba565b92915050565b6107ed816106ff565b82525050565b600060208201905061080860008301846107e4565b92915050565b610817816106a6565b811461082257600080fd5b50565b6000813590506108348161080e565b92915050565b6000602082840312156108505761084f6106da565b5b600061085e84828501610825565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108d0826106a6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561090357610902610896565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061095860008361093d565b915061096382610948565b600082019050919050565b60006109798261094b565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b60006109ca600b83610983565b91506109d582610994565b602082019050919050565b600060208201905081810360008301526109f9816109bd565b9050919050565b7f4469646e27742073656e6420656e6f7567682121000000000000000000000000600082015250565b6000610a36601483610983565b9150610a4182610a00565b602082019050919050565b60006020820190508181036000830152610a6581610a29565b9050919050565b6000610a77826106a6565b9150610a82836106a6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610abb57610aba610896565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b00826106a6565b9150610b0b836106a6565b925082610b1b57610b1a610ac6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b4581610b26565b8114610b5057600080fd5b50565b600081519050610b6281610b3c565b92915050565b6000819050919050565b610b7b81610b68565b8114610b8657600080fd5b50565b600081519050610b9881610b72565b92915050565b600081519050610bad8161080e565b92915050565b600080600080600060a08688031215610bcf57610bce6106da565b5b6000610bdd88828901610b53565b9550506020610bee88828901610b89565b9450506040610bff88828901610b9e565b9350506060610c1088828901610b9e565b9250506080610c2188828901610b53565b9150509295509295909350565b6000610c3982610b68565b9150610c4483610b68565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c8357610c82610896565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610cc057610cbf610896565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610cfd57610cfc610896565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d3a57610d39610896565b5b82820290509291505056fea2646970667358221220af9a8d282b7e0c1ecd07c37696533d3aee918be9bae315831502f676e27a141b64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b60d42881461014a578063dc0d3dff1461015457610070565b8063098de820146100755780633ccfd60b146100a05780633e47d6f3146100b7575b600080fd5b34801561008157600080fd5b5061008a610191565b60405161009791906106bf565b60405180910390f35b3480156100ac57600080fd5b506100b561019e565b005b3480156100c357600080fd5b506100de60048036038101906100d9919061073d565b610359565b6040516100eb91906106bf565b60405180910390f35b34801561010057600080fd5b50610109610371565b60405161011691906107c9565b60405180910390f35b34801561012b57600080fd5b50610134610397565b60405161014191906107f3565b60405180910390f35b6101526103bb565b005b34801561016057600080fd5b5061017b6004803603810190610176919061083a565b6104e4565b60405161018891906107f3565b60405180910390f35b6802b5e3af16b188000081565b60005b6000805490508110156102495760008082815481106101c3576101c2610867565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610241906108c5565b9150506101a1565b50600067ffffffffffffffff8111156102655761026461090e565b5b6040519080825280602002602001820160405280156102935781602001602082028036833780820191505090505b50600090805190602001906102a99291906105ff565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516102d09061096e565b60006040518083038185875af1925050503d806000811461030d576040519150601f19603f3d011682016040523d82523d6000602084013e610312565b606091505b5050905080610356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034d906109e0565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6802b5e3af16b18800006103fa600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461052390919063ffffffff16565b101561043b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043290610a4c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600081815481106104f457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061052f8361055f565b90506000670de0b6b3a764000085836105489190610a6c565b6105529190610af5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105a857600080fd5b505afa1580156105bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e09190610bb3565b5050509150506402540be400816105f79190610c2e565b915050919050565b828054828255906000526020600020908101928215610678579160200282015b828111156106775782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061061f565b5b5090506106859190610689565b5090565b5b808211156106a257600081600090555060010161068a565b5090565b6000819050919050565b6106b9816106a6565b82525050565b60006020820190506106d460008301846106b0565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061070a826106df565b9050919050565b61071a816106ff565b811461072557600080fd5b50565b60008135905061073781610711565b92915050565b600060208284031215610753576107526106da565b5b600061076184828501610728565b91505092915050565b6000819050919050565b600061078f61078a610785846106df565b61076a565b6106df565b9050919050565b60006107a182610774565b9050919050565b60006107b382610796565b9050919050565b6107c3816107a8565b82525050565b60006020820190506107de60008301846107ba565b92915050565b6107ed816106ff565b82525050565b600060208201905061080860008301846107e4565b92915050565b610817816106a6565b811461082257600080fd5b50565b6000813590506108348161080e565b92915050565b6000602082840312156108505761084f6106da565b5b600061085e84828501610825565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108d0826106a6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561090357610902610896565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061095860008361093d565b915061096382610948565b600082019050919050565b60006109798261094b565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b60006109ca600b83610983565b91506109d582610994565b602082019050919050565b600060208201905081810360008301526109f9816109bd565b9050919050565b7f4469646e27742073656e6420656e6f7567682121000000000000000000000000600082015250565b6000610a36601483610983565b9150610a4182610a00565b602082019050919050565b60006020820190508181036000830152610a6581610a29565b9050919050565b6000610a77826106a6565b9150610a82836106a6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610abb57610aba610896565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b00826106a6565b9150610b0b836106a6565b925082610b1b57610b1a610ac6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b4581610b26565b8114610b5057600080fd5b50565b600081519050610b6281610b3c565b92915050565b6000819050919050565b610b7b81610b68565b8114610b8657600080fd5b50565b600081519050610b9881610b72565b92915050565b600081519050610bad8161080e565b92915050565b600080600080600060a08688031215610bcf57610bce6106da565b5b6000610bdd88828901610b53565b9550506020610bee88828901610b89565b9450506040610bff88828901610b9e565b9350506060610c1088828901610b9e565b9250506080610c2188828901610b53565b9150509295509295909350565b6000610c3982610b68565b9150610c4483610b68565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c8357610c82610896565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610cc057610cbf610896565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610cfd57610cfc610896565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d3a57610d39610896565b5b82820290509291505056fea2646970667358221220af9a8d282b7e0c1ecd07c37696533d3aee918be9bae315831502f676e27a141b64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}